@page "/Delete/{Id}"
@using BlazorAppUserPortal.Data
@inject UserService userService
@inject NavigationManager NavigationManager

<h1>Delete following Record</h1><hr/>



<!-- Display user details for confirmation -->
<form>
    <div class="row">
        <div class=" col-md-8">
            <!-- User details labels (non-editable) -->
            <div class="form-group">
                <label>User Id:</label>
                <label>@obj.Id</label>
            </div>
            <div class="form-group">
                <label>First Name:</label>
                <label>@obj.FirstName</label>
            </div>
            <div class="form-group">
                <label>Middle Name:</label>
                <label>@obj.MiddleName</label>
            </div>
            <div class="form-group">
                <label>Last Name:</label>
                <label>@obj.LastName</label>
            </div>
            <div class="form-group">
                <label>Occupation:</label>
                <label>@obj.Occupation</label>
            </div>
            <div class="form-group">
                <label>Gender:</label>
                <label>@obj.Gender</label>
            </div>
            <div class="form-group">
                <label>City:</label>
                <label>@obj.City</label>
            </div>
        </div>

    </div>
    <alert>Are you sure you want to delete this?</alert>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-danger" @onclick="@DeleteUser" value="Delete" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    // Parameter for receiving the user ID from the route
    [Parameter]
    public string Id { get; set; }

    // User object for storing user details
    User obj = new User();

    // OnInitializedAsync method to fetch user details based on the provided ID
    protected override async Task OnInitializedAsync()
    {
        obj = await Task.Run(() => userService.GetUserById(Convert.ToInt32(Id)));
    }
    protected async void DeleteUser()
    {
        // Call userService to delete user
        await userService.DeleteUser(obj);

        // Back to the "UsersList" page after operation (deleting user information)
        NavigationManager.NavigateTo("UsersList");
    }
    void Cancel()
    {
        // back to the "UsersList" page without deleting
        NavigationManager.NavigateTo("UsersList");
    }
}